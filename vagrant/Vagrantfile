# -*- mode: ruby -*-
# vi: set ft=ruby :

=begin
depends on these plugins:
  - vagrant-disksize
  - vagrant-nfs_guest
=end
require 'fileutils'
require 'yaml'
begin
  settings = YAML.load_file './settings.yaml'
rescue
  settings = {}
end


Vagrant.configure("2") do |config|
  config.vm.box = settings.fetch("box", "ubuntu/focal64")
  config.vm.hostname = settings.fetch("hostname", File.basename(File.dirname(__FILE__)))
  # vagrant plugin install vagrant-disksize
  config.disksize.size = settings.fetch("disksize", "40GB")

  config.vm.network "private_network", ip: settings.fetch("private_network", {}).fetch("ip", "192.168.33.12")
  public_network = settings.fetch("public_network", {})
  if !public_network.empty?
    config.vm.network "public_network", bridge: public_network.fetch("bridge"), ip: public_network.fetch("ip")
  else
  end
  settings.fetch("forward_port", []).each do | item |
    config.vm.network "forwarded_port", guest: item["guest"], host: item["host"]
  end

  config.vm.provider "virtualbox" do |vb|
    vb.gui = true # temporary
    vb.memory = settings.fetch(:memory, 6144)
    vb.cpus = settings.fetch(:memory, 3)
  end

  username = "cliff"
  uid = 666

  # create user
  config.vm.provision :shell, privileged: true, inline: <<-SHELL
    if ! id #{username} >/dev/null 2>&1
    then
      useradd -m -s /usr/bin/zsh -U #{username} -u #{uid}
      chown -R #{username}:#{username} /home/#{username}
    fi
    if [ ! -f /etc/sudoers.d/#{username} ]
    then
      echo "%#{username} ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/#{username}
    fi
    mkdir -p /home/#{username}/.ssh
    if ! grep -q vagrant /home/#{username}/.ssh/authorized_keys >/dev/null 2>&1
    then
      grep vagrant /home/vagrant/.ssh/authorized_keys >> /home/#{username}/.ssh/authorized_keys
    fi
    if ! grep -q github.com /home/#{username}/.ssh/config >/dev/null 2>&1
    then
      echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> /home/#{username}/.ssh/config
    fi
    chmod 500 /home/#{username}/.ssh/config
    chown -R #{username}:#{username} /home/#{username}/.ssh
  SHELL

  # dotfiles
  # NOTE: https://www.vagrantup.com/docs/synced-folders/nfs.html#root-privilege-requirement
  config.vm.synced_folder "#{ENV['HOME']}/dev/dotfiles", "/home/#{username}/dev/dotfiles", owner: uid
  # config.vm.synced_folder "#{ENV['HOME']}/dev/dotfiles", "/home/#{username}/dev/dotfiles",  type: "nfs", owner: uid
  settings.fetch("synced_folder", []).each do | item |
    host_dir = item["host"].gsub(/^~/, "#{ENV['HOME']}")
    guest_dir = item["guest"].gsub(/^~/, "/home/#{username}")
    type = item["type"]

    if type == "nfs_guest"  # guest -> host make sure the directory exists
      FileUtils.mkdir_p host_dir unless Dir.exists?(host_dir)
    end
    config.vm.synced_folder host_dir, guest_dir, type: type, owner: uid
  end

  config.ssh.forward_agent = true
  config.ssh.forward_x11 = true
  if ARGV[0] == "ssh"
    config.ssh.username = username
  end

  timezone = settings.fetch("timezone", "Europe/Paris")
  config.vm.provision :shell, run: "always", inline: <<-SHELL
    sudo rm /etc/localtime
    sudo ln -s /usr/share/zoneinfo/#{timezone} /etc/localtime
  SHELL

  config.vm.provision :shell, privileged: true, inline: <<-SHELL
    mkdir -p /home/#{username}/dev
    cd /home/#{username}/dev
    if [ -d dotfiles ]
    then
      echo "dotfiles already exists"
    else
      git clone git@github.com:cliffxuan/dotfiles
    fi
    cd /home/#{username}/dev/dotfiles
    if [ -d vimfiles ]
    then
      echo "vimfiles already exists"
    else
      git clone git@github.com:#{username}xuan/vimfiles
    fi
    chown #{username}:#{username} -R /home/#{username}/dev
    runuser -u #{username} -- /home/#{username}/dev/dotfiles/install.sh -v
  SHELL

  end
