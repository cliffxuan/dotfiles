# -*- mode: ruby -*-
# vi: set ft=ruby :

=begin
depends on these plugins:
  - vagrant-disksize
  - vagrant-nfs_guest
=end
require 'fileutils'
require 'yaml'
begin
  settings = YAML.load_file './settings.yaml'
rescue
  settings = {}
end


Vagrant.configure("2") do |config|
  config.vm.box = settings.fetch("box", "ubuntu/bionic64")
  config.vm.hostname = settings.fetch("hostname", File.basename(File.dirname(__FILE__)))
  # vagrant plugin install vagrant-disksize
  config.disksize.size = settings.fetch("disksize", "20GB")

  config.vm.network "private_network", ip: settings.fetch("ip", "192.168.33.10")
  settings.fetch("forward_port", []).each do | item |
    config.vm.network "forwarded_port", guest: item["guest"], host: item["host"]
  end

  config.vm.provider "virtualbox" do |vb|
    vb.memory = settings.fetch(:memory, 6144)
    vb.cpus = settings.fetch(:memory, 3)
  end

  # dotfiles
  # NOTE: https://www.vagrantup.com/docs/synced-folders/nfs.html#root-privilege-requirement
  config.vm.synced_folder "#{ENV['HOME']}/dev/dotfiles", "/home/vagrant/dev/dotfiles" , type: "nfs"
  settings.fetch("synced_folder", []).each do | item |
    host_dir = item["host"].gsub(/^~/, "#{ENV['HOME']}")
    guest_dir = item["guest"].gsub(/^~/, "/home/vagrant")
    type = item["type"]

    if type == "nfs_guest"  # guest -> host make sure the directory exists
      FileUtils.mkdir_p host_dir unless Dir.exists?(host_dir)
    end
    config.vm.synced_folder host_dir, guest_dir, type: type
  end

  config.ssh.forward_agent = true
  config.ssh.forward_x11 = true

  config.vm.provision :shell, run: "always", inline: <<-SHELL
    sudo rm /etc/localtime
    sudo ln -s /usr/share/zoneinfo/Europe/Paris /etc/localtime
  SHELL

  config.vm.provision :shell, privileged: false, inline: <<-SHELL
    mkdir -p $HOME/dev
    sudo chown vagrant:vagrant $HOME/dev
    cd $HOME/dev
    echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
    chmod 500 ~/.ssh/config
    if [ -d dotfiles ]
    then
      echo "dotfiles already exists"
    else
      git clone git@github.com:cliffxuan/dotfiles
    fi
    $HOME/dev/dotfiles/install.sh
  SHELL
end
