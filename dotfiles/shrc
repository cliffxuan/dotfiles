# vi: ft=bash
# config for both zsh and bash
# path
if [[ $OSTYPE == darwin* ]]
then
  export PATH=$HOME/local/bin:$HOME/bin:/usr/local/opt/gnu-sed/libexec/gnubin:/usr/local/bin:/usr/local/sbin:$PATH
else
  if grep -vq "/usr/local/bin" <<< "$PATH"
  then
    export PATH=/usr/local/bin:$PATH
  fi
  export PATH=$HOME/bin:$HOME/.local/bin:$PATH
fi

#vim
alias uvim="vim -u NONE"
alias svim="vim -u $HOME/.vimfiles/sensible.vim"
alias neobundle="vim +NeoBundleInstall +qall"
alias n="nvim"

#term
export TERM="xterm-256color"
export LANG='en_US.UTF-8'
export LC_COLLATE="en_US.UTF-8"
export LC_CTYPE="en_US.UTF-8"
export LC_MESSAGES="en_US.UTF-8"
export LC_MONETARY="en_US.UTF-8"
export LC_NUMERIC="en_US.UTF-8"
export LC_TIME="en_US.UTF-8"
export LC_ALL="en_US.UTF-8"
export LOCALE_ARCHIVE=/usr/lib/locale/locale-archive

#tmux cannot remember why screen-256color-bce. this doesn't work on wsl
# alias tmux="TERM=screen-256color-bce tmux"

#ssh reverse tunneling
alias sshl="ssh -R 19999:localhost:22"

#haskell
if [[ -d $HOME/Library/Haskell/bin ]]
then
  PATH=$HOME/Library/Haskell/bin:$PATH
fi
if [[ -d $HOME/.cabal/bin ]]
then
  PATH=$HOME/.cabal/bin:$PATH
fi

#linuxbrew
if [[ -d /home/linuxbrew/.linuxbrew/bin ]]
then
  PATH=$PATH:/home/linuxbrew/.linuxbrew/bin
fi

function _all_vms() {
  reply=(`VBoxManage list vms | awk '{gsub("\"",""); print $1}'`)
}

function _running_vms() {
  reply=(`VBoxManage list runningvms | awk '{gsub("\"",""); print $1}'`)
}

function startvm {
  VBoxManage startvm $1 --type=headless
}
compctl -K _all_vms startvm

function poweroffvm {
  VBoxManage controlvm $1 poweroff
}
compctl -K _running_vms poweroffvm

function controlvm {
  VBoxManage controlvm $1 $2
}
compctl -K _all_vms controlvm

function removevm {
  VBoxManage unregistervm $1 --delete
}
compctl -K _all_vms removevm

#show the rear of a file
function rear {
  python -c "ff=open('$1', 'rb'); ff.seek(-$2,2); print ff.read($2)"
}


#alias
alias ..g='git rev-parse && cd "$(git rev-parse --show-cdup)"'
alias g="git"
alias gd="git diff"
alias gf="git fetch origin"
alias gp="git push origin"
alias gs="git status"
alias gl="git log"
alias wo=workon

function ga {
  if [ -z "$1" ]
  then
    git add -u
  else
    git add "$@"
  fi
}

#git all
function gall {
  for gitdir in $(find . -mindepth 2 -name .git -type d 2>/dev/null)
  do
    echo "#########################################################"
    echo ${gitdir%/.git}
    cd $gitdir/..
    git --no-pager "$@"
    cd - > /dev/null
    echo
  done
}

#web pastebins
#hastebin.com
function haste {
  cat <<EOF | python -
from urllib.request import urlopen, Request
URL = "https://hastebin.com"
rsp = urlopen(Request(
    f"{URL}/documents",
    data=open("$1", 'rb').read(),
    method="POST",
    headers={"user-agent": ""},
))
print(f"{URL}/{rsp.read().decode()[8:-2]}")
EOF
}

function update_ssh_auth_sock {
  # Predictable SSH authentication socket location.
  SOCK="/tmp/ssh-agent-$USER-screen"
  if test $SSH_AUTH_SOCK && [ $SSH_AUTH_SOCK != $SOCK ]
  then
    rm -f /tmp/ssh-agent-$USER-screen
    ln -sf $SSH_AUTH_SOCK $SOCK
    export SSH_AUTH_SOCK=$SOCK
  fi
}

update_ssh_auth_sock

# docker
function _dk_vms() {
  reply=(`docker-machine ls -q`)
}

function synctime {
  docker-machine ssh $1 sudo ntpclient -s -h pool.ntp.org
}
compctl -K _dk_vms synctime

function refreshdns {
  docker-machine ssh $1 sudo udhcpc
}
compctl -K _dk_vms refreshdns

function gdns {
  docker-machine ssh $1 "sudo echo 'nameserver 8.8.8.8' > /etc/resolv.conf"
}
compctl -K _dk_vms gdns

# rust
function rust {
  exe=/tmp/${1%.*}
  rm -f $exe
  rustc $1 -o $exe && $exe
}

# c
function c {
exe=/tmp/${1%.*}
rm -f $exe
gcc $@ -o $exe && $exe
}

# ssl
function showcrt {
  openssl x509 -in $1 -text -noout
}


alias h="python3 -m http.server"

NIX_SH=$HOME/.nix-profile/etc/profile.d/nix.sh
if [ -f $NIX_SH ]
then
  source $NIX_SH
fi

function gkill {
  ps aux | grep "$*" | grep -v grep | awk '{print $2}' | xargs kill -9
}


function transfer {
  if [ $# -eq 0 ];
  then echo -e "No arguments specified. Usage:\necho transfer /tmp/test.md\ncat /tmp/test.md | transfer test.md";
    return 1;
  fi
  tmpfile=$( mktemp -t transferXXX );
  if tty -s;
  then basefile=$(basename "$1" | sed -e 's/[^a-zA-Z0-9._-]/-/g'); curl --progress-bar --upload-file "$1" "https://transfer.sh/$basefile" >> $tmpfile;
  else curl --progress-bar --upload-file "-" "https://transfer.sh/$1" >> $tmpfile ;
  fi;
  cat $tmpfile; rm -f $tmpfile;
}

export PROJECT_HOME=$HOME/dev
# export VIRTUALENVWRAPPER_VIRTUALENV_ARGS='--system-site-packages'
if [[ -f $HOME/.env ]]
then
  source $HOME/.env
fi
export GOPATH=$HOME/.go
if [[ -d $GOPATH ]]
then
  PATH=$PATH:$GOPATH/bin
fi

#display for WSL
if [[ -f /proc/version ]]
then
  if grep -q microsoft /proc/version
  then
    export DISPLAY=$(cat /etc/resolv.conf | grep nameserver | awk '{print $2}'):0
  fi
fi

export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
