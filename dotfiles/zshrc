source "$HOME/.zinit/bin/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

bindkeyHistorySubstringSearch() {
  if [[ "$OSTYPE" == "linux-gnu" ]]; then
    bindkey '^[OA' history-substring-search-up
    bindkey '^[OB' history-substring-search-down
  elif [[ "$OSTYPE" == "darwin"* ]]; then
    bindkey '^[[A' history-substring-search-up
    bindkey '^[[B' history-substring-search-down
  fi
  HISTORY_SUBSTRING_SEARCH_ENSURE_UNIQUE=1
}

# automatically run by zvm
function zvm_after_init() {
  [[ -f ~/.fzf.zsh ]] && source ~/.fzf.zsh
}


zinit wait lucid light-mode for \
  atinit"zicompinit; zicdreplay" \
    zsh-users/zsh-syntax-highlighting \
  atload"_zsh_autosuggest_start; bindkeyHistorySubstringSearch" \
    zsh-users/zsh-autosuggestions \
    zsh-users/zsh-history-substring-search \
  blockf atpull'zinit creinstall -q .' \
    zsh-users/zsh-completions

zinit wait lucid for \
  OMZL::git.zsh \
  OMZL::history.zsh \
  OMZL::completion.zsh \
  OMZL::clipboard.zsh \
  OMZL::directories.zsh \
  OMZL::theme-and-appearance.zsh \
  OMZP::docker-compose/docker-compose.plugin.zsh \
  https://github.com/docker/cli/blob/master/contrib/completion/zsh/_docker \
  jeffreytse/zsh-vi-mode

if [[ -f $HOME/.theme.zsh ]]; then
  source $HOME/.theme.zsh
elif [[ "$OSTYPE" == "linux-gnu" ]]; then
  zinit ice src"powerlevel10k.zsh-theme"; zinit light romkatv/powerlevel10k
  POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(context dir vcs virtualenv newline)
  source $HOME/dev/dotfiles/zsh/p10k.zsh
elif [[ "$OSTYPE" == "darwin"* ]]; then
  zinit ice pick"async.zsh" src"pure.zsh"; zinit light sindresorhus/pure
else
  zinit snippet OMZ::themes/robbyrussell.zsh-theme
fi

# fzf
zinit ice atclone'"$PWD"/install --key-bindings --completion --no-update-rc --no-bash --no-fish' \
  atpull"%atclone" atinit'export PATH="$PWD/bin:$PATH"'
zinit light junegunn/fzf

# pyenv
zinit ice wait"1" lucid atclone'PYENV_ROOT="$PWD" git clone https://github.com/pyenv/pyenv-virtualenvwrapper.git $PWD/plugins/pyenv-virtualenvwrapper && ./libexec/pyenv init - > zpyenv.zsh' \
  atinit'export PYENV_ROOT="$PWD"; PATH="$PYENV_ROOT/shims:$PYENV_ROOT/bin:$PATH"' \
  atpull'PYENV_ROOT="$PWD" ./libexec/pyenv init - > zpyenv.zsh' \
  as'command' pick'bin/pyenv' src"zpyenv.zsh" atload='pyenv virtualenvwrapper_lazy' nocompile'!'
zinit light pyenv/pyenv

# nvm
zinit ice wait"2" lucid atinit'export NVM_DIR="$PWD"' atload='source bash_completion'\
  as'command' src"nvm.sh" nocompile'!'
zinit light nvm-sh/nvm

############ end of zinit ################
zstyle ':completion:*:*:git*:*' ignored-patterns '*ORIG_HEAD'

if [ -e "${HOME}/.iterm2_shell_integration.zsh" ]; then
  source "${HOME}/.iterm2_shell_integration.zsh"
fi
source ~/.shrc
