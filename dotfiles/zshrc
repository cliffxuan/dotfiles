# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

declare -A ZINIT
ZINIT[NO_ALIASES]=1

source "$HOME/.zinit/bin/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

bindkeyHistorySubstringSearch() {
  if [[ "$OSTYPE" == "linux-gnu" ]]; then
    bindkey '^[OA' history-substring-search-up
    bindkey '^[OB' history-substring-search-down
  elif [[ "$OSTYPE" == "darwin"* ]]; then
    bindkey '^[[A' history-substring-search-up
    bindkey '^[[B' history-substring-search-down
  fi
  HISTORY_SUBSTRING_SEARCH_ENSURE_UNIQUE=1
}

# automatically run by zsh-vi-mode
function zvm_after_init() {
  [[ -f ~/.fzf.zsh ]] && source ~/.fzf.zsh
}


zinit wait lucid light-mode for \
  atinit"zicompinit; zicdreplay" \
    zsh-users/zsh-syntax-highlighting \
  atload"_zsh_autosuggest_start; bindkeyHistorySubstringSearch" \
    zsh-users/zsh-autosuggestions \
    zsh-users/zsh-history-substring-search \
  blockf atpull'zinit creinstall -q .' \
    zsh-users/zsh-completions

zinit wait lucid for \
  OMZL::git.zsh \
  OMZL::history.zsh \
  OMZL::completion.zsh \
  OMZL::clipboard.zsh \
  OMZL::directories.zsh \
  OMZL::theme-and-appearance.zsh \
  OMZP::docker-compose/docker-compose.plugin.zsh \
  https://github.com/docker/cli/blob/master/contrib/completion/zsh/_docker \
  jeffreytse/zsh-vi-mode

if [[ -f $HOME/.theme.zsh ]]; then
  source $HOME/.theme.zsh
elif [[ "$OSTYPE" == "linux-gnu" ]]; then
  zinit ice src"powerlevel10k.zsh-theme"; zinit light romkatv/powerlevel10k
  POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(context dir vcs virtualenv newline)
  if [[ -f $HOME/.p10k.zsh ]]; then
    source "$HOME/.p10k.zsh"
  else
    source $HOME/dev/dotfiles/zsh/p10k.zsh
  fi
elif [[ "$OSTYPE" == "darwin"* ]]; then
  zinit ice as"command" from"gh-r" \
    atclone"./starship init zsh > init.zsh; ./starship completions zsh > _starship" \
    atpull"%atclone" src"init.zsh" # pull behavior same as clone, source init.zsh
  zinit light starship/starship
else
  zinit ice pick"async.zsh" src"pure.zsh"; zinit light sindresorhus/pure
  zstyle :prompt:pure:path color 039
fi

# fzf
zinit ice wait lucid \
  atclone'"$PWD"/install --key-bindings --completion --no-update-rc --no-bash --no-fish' \
  atpull"%atclone" \
  atinit'export PATH="$PWD/bin:$PATH"'
zinit light junegunn/fzf

# virtualenvwrapper
zinit ice wait lucid from \
  atinit'[[ -z $VIRTUAL_ENV ]] && source virtualenvwrapper.sh'
zinit light python-virtualenvwrapper/virtualenvwrapper

# bottom
zinit ice as"command" from"gh-r"
zinit light ClementTsang/bottom

# exa
zinit ice as"command" from"gh-r" pick"/bin/exa" atclone"mv completions/exa.zsh completions/_exa"
zinit light ogham/exa

# zoxide
zinit ice as"command" from"gh-r" lucid \
  mv"zoxide*/zoxide -> zoxide" \
  atclone"./zoxide init zsh > init.zsh" \
  src"init.zsh" nocompile'!'
zinit light ajeetdsouza/zoxide

############ end of zinit ################
zstyle ':completion:*:*:git*:*' ignored-patterns '*ORIG_HEAD'

source ~/.shrc

# TODO lazy load
if [ -x gcloud ]
then
  source ~/dev/dotfiles/config/gcloud/completion.zsh.inc
fi

# Shell-GPT integration ZSH v0.2
_sgpt_zsh() {
if [[ -n "$BUFFER" ]]; then
    _sgpt_prev_cmd=$BUFFER
    BUFFER+="âŒ›"
    zle -I && zle redisplay
    BUFFER=$(sgpt --shell <<< "$_sgpt_prev_cmd" --no-interaction)
    zle end-of-line
fi
}
zle -N _sgpt_zsh

bindkey -M emacs '^O' _sgpt_zsh
bindkey -M vicmd '^O' _sgpt_zsh
bindkey -M viins '^O' _sgpt_zsh
# Shell-GPT integration ZSH v0.2
